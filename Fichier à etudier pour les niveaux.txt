<i class="fas fa-heart"></i>    coeur

<i class="fas fa-child"></i>    child

<i class="fas fa-dog"></i>      dog

<i class="fas fa-money-bill-wave"></i>   money

<i class="fas fa-info"></i>   information

<i class="fas fa-search"></i> search

<i class="fas fa-star"></i> star

<i class="fas fa-chart-line"></i> graphique

<i class="fas fa-info"></i>

----------------------------------------------
95019_001_02  amkavavo
95229_001_01  amkavavo

Bonjour , 

Je souhaiterais faire une intervention ce mercredi 12 janvier à partir 9h30 , pour moderniser nos équipements Free mobile qui se situent
au Château d'eau 26 rue Marat 95400 Arnouville.

Les 2 intervenants sont :
Zermani Younes et Ahamed Mkavavo .


-----------------------------
motclé
------------------------------
M5LS3U0QzZyPBn52kSVw81GRCRhA_6_Tmif3WhzEB6M

Cordialement.

---------------------------------------------------------
https://codepen.io/techmindconsulting/pen/zYRVWMv


const vocabularies = [
  {
    level: 1,
    words: [
      {
        fr: "porte",
        en: "door"
      },
      {
        fr: "lit",
        en: "bed"
      },
      {
        fr: "table",
        en: "table"
      }
    ]
  },
  {
    level: 2,
    words: [
      {
        fr: "lumière",
        en: "light"
      },
      {
        fr: "bouteile",
        en: "bottle"
      },
      {
        fr: "fenêtre",
        en: "window"
      },
      {
        fr: "fenêtre",
        en: "window"
      }
    ]
  }
];


vocabularies.forEach( vocabulary => {
  console.log(`Niveau: ${vocabulary.level} - Nombre de mots:  ${vocabulary.words.length}`);
  const words = vocabulary.words;
  
  words.forEach( word => console.log(`${word['fr']} => ${word['en']}`));
})

// A l'ancienne
for(let i = 0; i < vocabularies.length; i++) {
  console.log(`Niveau: ${vocabularies[i].level} - Nombre de mots:  ${vocabularies[i].words.length}`);
  const words = vocabularies[i].words;
  
  for(let i= 0; i < words.length; i++) {
    console.log(`${words[i]['fr']} => ${words[i]['en']}`);
  }
}


----------------------------------------------------------------------------------
------------------------------------------------------------------------------
const quizQuestions = [
  {
    level: 1,
    tableaux:[
  {
    questionText: "Quelle est la capitale des Comores?",
    answerOptions: ["Econol", "Dublin", "Moroni", "Gaza"],
    answer: "Moroni",
  },
  {
    questionText: "Comment s'appelle le prophète",
    answerOptions: ["Abdullah", "Harry Potter", "Omar", "Mohamed"],
    answer: "Mohamed",
  },
  {
    questionText: "2X8",
    answerOptions: ["16", "29", "14", "12"],
    answer: "16",
  }
] 
  },
  {
     level: 2,
    tableaux: [
  {
    questionText: "Comment s'appelle le Premier Calife",
    answerOptions: ["Omar ", "Abou Bakr", "Ali", "Bilal"],
    answer: "Abou Bakr",
   },
   {
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
    answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
     answer: "Royauté",
   },
   {
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
     answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
    answer: "Royauté",
  },
{
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
     answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
    answer: "Royauté",
  },
  {
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
     answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
    answer: "Royauté",
   },
   {
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
     answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
     answer: "Royauté",
   }
 ]
}
];

quizQuestions.forEach( quizQuestion => {
  console.log(`Niveau: ${quizQuestion.level}`) ;
  const tableauc = quizQuestion.tableaux;
  tableauc.forEach(tabli => {
    //console.log(tabli);
    //console.log(tabli.answerOptions.length);
    const listes = tabli.answerOptions;
    listes.forEach(liste => {
      console.log(liste);
    })
  })
});


----------------------------------------
------------------------------------------------------------
console.log("connecté !");
// define our data and state objects
const quizQuestions = [
  {
    level: 1,
    tableaux:[
  {
    questionText: "Quelle est la capitale des Comores?",
    answerOptions: ["Econol", "Dublin", "Moroni", "Gaza"],
    answer: "Moroni",
  },
  {
    questionText: "Comment s'appelle le prophète",
    answerOptions: ["Abdullah", "Harry Potter", "Omar", "Mohamed"],
    answer: "Mohamed",
  },
  {
    questionText: "2X8",
    answerOptions: ["16", "29", "14", "12"],
    answer: "16",
  }
] 
  },
  {
     level: 2,
    tableaux: [
  {
    questionText: "Comment s'appelle le Premier Calife",
    answerOptions: ["Omar ", "Abou Bakr", "Ali", "Bilal"],
    answer: "Abou Bakr",
   },
   {
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
    answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
     answer: "Royauté",
   },
   {
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
     answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
    answer: "Royauté",
  },
{
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
     answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
    answer: "Royauté",
  },
  {
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
     answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
    answer: "Royauté",
   },
   {
     questionText: "Que veut dire : ٱلْمَـٰلِكُ",
     answerOptions: ["Royauté", "Justice", "Equité", "Pardonneur"],
     answer: "Royauté",
   }
 ]
}
];

console.log(quizQuestions.length);

let currentQuestion = 0; //computers start counting from zero remember!
let currentScore = 0;

// get our elements from the dom
let progress = document.querySelector("#progressBar");
console.log(progress);
let percentage = parseInt(progress.getAttribute("data-progress").replace("%", ""));
// percentage = 40;
console.log(percentage);
progress.setAttribute("data-progress", percentage + "%");
document.documentElement.style.setProperty("--progress", percentage + "%");

const quizContainer = document.querySelector(".quiz-container");
const questionDisplay = document.querySelector(".question");
const answerList = document.querySelector(".answer-list");
const score = document.querySelector(".quiz-score");
const answerValidate = document.querySelector(".answer-validate");
const resultBar = document.querySelector(".resultBar");
let nbreQuestion = document.querySelector(".nbre_question");

// helper methods to create our elements
// const createQuizQuestion = quizQuestion => {
function createQuizQuestion(tableau) {
  createQuestionText(tableau.questionText);
  createAnswerButtons(tableau.answerOptions);
}

// const createQuizScore = () => {
function createQuizScore() {
  questionDisplay.style.display = "none";
  answerList.style.display = "none";
  answerValidate.style.display = "none";
  progress.style.display = "none";
  resultBar.style.display = "none";
    // show the score
  score.style.display = "block";
  score.textContent = "Votre score est de  " + currentScore + "/" + quizQuestions.length;
}

// const createQuestionText = questionText => {
//   // append our div to our answer list
//   questionDisplay.textContent = "Q)" + questionText;
// };
function createQuestionText(questionText) {
  questionDisplay.textContent = "Q)" + questionText;
}
 function nbreQuest() {
   nbreQuestion.textContent = currentQuestion +"/"+ quizQuestions.length;
   
  }
  nbreQuest();
function progressBar() {
  let progress = document.querySelector("#progressBar");
  console.log(progress);
  let percentage = parseInt(progress.getAttribute("data-progress").replace("%", ""));
  percentage += 100 / quizQuestions.length;
  console.log(percentage);
  progress.setAttribute("data-progress", percentage + "%");
  document.documentElement.style.setProperty("--progress", percentage + "%");
  percentage += 100 / quizQuestions.length;
  console.log(percentage);
}

function answerValid() {
  answerValidate.style.display = "flex";
  answerValidate.textContent = "Valider";
  answerValidate.addEventListener("click", () => {
    console.log("c'est bon");
    currentQuestion += 1;
     progressBar();
     nbreQuest();
    // display questions if we still have them,
    // otherwise display the scores
    if (quizQuestions[currentQuestion]) {
      createQuizQuestion(quizQuestions[currentQuestion]);
    } else {
      setTimeout(createQuizScore,500);
    }
  });
}
answerValid();


// const createAnswerButtons = answerOptions => {
function createAnswerButtons(answerOptions) {

  quizQuestions.forEach( quizQuestion => {
    console.log(`Niveau: ${quizQuestion.level}`) ;
    const tableaux = quizQuestion.tableaux;
    tableaux.forEach(tableau => {
      //console.log(tabli);
      //console.log(tabli.answerOptions.length);
      const question = tableau.questionText;
      console.log(question);
      const listes = answerOptions;
      
  
  //clear our answer list before creating new answer buttons
  answerList.innerHTML = "";

  // our answerOptions is an array, so we map over it to
  // create a list of answer buttons
  
  listes.forEach((liste) => {
    console.log(liste);
    // create an answer item div and give it a class
    const answerItemDiv = document.createElement("div");
    answerItemDiv.className = "answer-item";
    //answerItemDiv.classList.add("answer-item");
    

    //create a button
    const answerButton = document.createElement("button");
    answerButton.textContent = liste;
    

    // add an eventlistener to this button to check if answer is correct or not
    // handleAnswerButtonClick();

    answerButton.addEventListener("click", () => {
      // get our currentQuestion
      answerButton.style.background = "linear-gradient(126deg, rgba(86, 69, 185, 1) 10%, rgba(228, 117, 181, 0.9925012241224614) 94%);";
      const question = quizQuestions[currentQuestion];
      // compare the answer the user selected to the correct answer
      if (question.answer === answerButton.textContent) {
        currentScore += 1;
      }
      // move on to the next question
   

    // append button to our div
    answerItemDiv.appendChild(answerButton);

    // append our div to our answer list
    answerList.appendChild(answerItemDiv);
  });
});
});
});
}

// const handleAnswerButtonClick = answerButton => {};
function handleAnswerButtonClick(answerButton) {}

(function () {
  createQuizQuestion(quizQuestions[0]);
})();

 